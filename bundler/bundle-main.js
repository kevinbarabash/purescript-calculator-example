const fs = require("fs");
const rollup = require('rollup');

const resolve = require('rollup-plugin-node-resolve');
const commonjs = require('rollup-plugin-commonjs');
const globals = require('rollup-plugin-node-globals');
const replace = require('rollup-plugin-replace');

const dce = require("./dce.js");

const NODE_ENV = process.env.NODE_ENV || "development";

const bundleMain = async (inputPath, outputPath) => {
    const bundle = await rollup.rollup({
        input: inputPath,
        external: ['react', 'react-dom'],
        output: {
            file: outputPath,
            format: 'esm'
        },
        plugins: [
            replace({
                "process.env.NODE_ENV": JSON.stringify(NODE_ENV),
            }),
            resolve(),
            globals(),
        ],
    });

    // Generate code
    const {output} = await bundle.generate({
        format: 'esm',
    });

    const code = output[0].code
        // Rename imports to have an absolute path.
        // Rollup generates 'import Foo from "foo"' statements instead of 'import * as Foo from "foo"'.
        // TOOD: make this configurable
        .replace(/\s+from\s+['"]([^'"]+)['"]/g, (match, path) => ` from "./${path}.js"`)
        // Remove comments
        .replace(/\/\/ Generated by purs version 0\.[0-9]+\.[0-9]+[\n]/g, "");

    const optimizedCode = dce(code);

    fs.writeFileSync(outputPath, optimizedCode, "utf-8");
}

module.exports = bundleMain;
